package game.of.life;
import java.awt.Color;
import java.util.Timer;
import java.util.TimerTask;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.ActionEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Arham Saeed
 */
public class GOL extends javax.swing.JFrame {
    int width=100, height=50;
    boolean[][] currentState = new boolean[height][width];
    boolean[][] nextState = new boolean[height][width];
    boolean play;
    Image bufferImage;
    Graphics bufferGraphics;
    /**
     * Creates new form GOL
     */
    public GOL() {
        initComponents();
        bufferImage = createImage(jPanel1.getWidth(),jPanel1.getHeight());
        bufferGraphics = bufferImage.getGraphics();
        paintScreen();
        String[] shapes = {"","Glider", "Small Exploder", "Exploder","10 cell row","Lightweight Spaceship","Tumbler"};
        Timer time = new Timer();
        for (int i = 0; i < shapes.length; i++) {
            jComboBox1.addItem(shapes[i]);
        }
        TimerTask task = new TimerTask(){
            public void run(){
                if (play) {
                    for (int i = 0; i < height; i++) {
                        for (int j = 0; j < width; j++) {
                            nextState[i][j] = decide(i,j);
                        }
                    }
                    for (int i = 0; i < height; i++) {
                        for (int j = 0; j < width; j++) {
                            currentState[i][j] = nextState[i][j];
                        }
                    }
                    paintScreen();
                }
            }
        };
        time.scheduleAtFixedRate(task, 0, 100);
    }
    private boolean decide(int i, int j){
        int nCount=0;
        if (i>0) {
            if(currentState[i-1][j])    nCount++;
            if (j>0) {
                if(currentState[i-1][j-1])    nCount++;
            }
            if (j< width-1) {
                if(currentState[i-1][j+1])  nCount++;
            }
        }
        if (i < height-1) {
            if (currentState[i+1][j])   nCount++; 
            if (j > 0) {
                if (currentState[i+1][j-1]) nCount++;
            }
            if (j < width-1) {
                if(currentState[i+1][j+1])  nCount++;
            }
        }
        if(j>0){
            if(currentState[i][j-1])    nCount++;
        }
        if (j < width-1) {
            if(currentState[i][j+1])    nCount++;
        }
        if(nCount == 3) return true;
        if(currentState[i][j] && nCount==2) return true;
        return false;
    }
    private void paintScreen(){
        bufferGraphics.setColor(jPanel1.getBackground());
        bufferGraphics.fillRect(0, 0, jPanel1.getWidth(), jPanel1.getHeight());
        
        for (int i = 0; i < height; i++) {
            for (int j = 0; j < width; j++) {
                if (currentState[i][j]) {
                    bufferGraphics.setColor(Color.YELLOW);
                    int x = j * jPanel1.getWidth()/width;
                    int y = i * jPanel1.getHeight()/height; 
                    bufferGraphics.fillRect(x, y, jPanel1.getWidth()/width, jPanel1.getHeight()/height);
                }
            }
        }
        bufferGraphics.setColor(Color.BLACK);
        for (int i = 1; i < height; i++) {
            int y = i * jPanel1.getHeight()/height;
            bufferGraphics.drawLine(0, y, jPanel1.getWidth(), y);
        }
        for (int i = 1; i < width; i++) {
            int x = i * jPanel1.getWidth()/width;
            bufferGraphics.drawLine(x, 0, x, jPanel1.getHeight());
        }
        jPanel1.getGraphics().drawImage(bufferImage, 0, 0, jPanel1);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });
        jPanel1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jPanel1ComponentResized(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jButton1.setText("Run");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Reset");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField1.setText(Integer.toString(width));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.setText(Integer.toString(height)
        );
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 459, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 290, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        play = !play;
        if (play) {
            jButton1.setText("Pause");
        }else
            jButton1.setText("Run");
        paintScreen();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        // TODO add your handling code here:
        int j = width*evt.getX() / jPanel1.getWidth();
        int i = height*evt.getY() / jPanel1.getHeight();
        currentState[i][j] = !currentState[i][j];
        paintScreen();
        
    }//GEN-LAST:event_jPanel1MouseClicked

    private void jPanel1ComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel1ComponentResized
        // TODO add your handling code here:
        bufferImage = createImage(jPanel1.getWidth(),jPanel1.getHeight());
        bufferGraphics = bufferImage.getGraphics();
        paintScreen();
    }//GEN-LAST:event_jPanel1ComponentResized

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        currentState = new boolean[height][width];
        paintScreen();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
        // TODO add your handling code here:
        int j = width*evt.getX() / jPanel1.getWidth();
        int i = height*evt.getY() / jPanel1.getHeight();
        if (SwingUtilities.isLeftMouseButton(evt)) {
            currentState[i][j] = true;
        }else
            currentState[i][j] = false;
        paintScreen();
    }//GEN-LAST:event_jPanel1MouseDragged

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
        width = Integer.parseInt(jTextField1.getText());
        currentState = new boolean[height][width];
        nextState = new boolean[height][width];
        paintScreen();
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
        height = Integer.parseInt(jTextField1.getText());
        currentState = new boolean[height][width];
        nextState = new boolean[height][width];
        paintScreen();
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        String selected = (String)jComboBox1.getSelectedItem();
        int x = width/2;
        int y = height/2;
        currentState = new boolean[height][width];
        paintScreen();
        if (selected == "Glider") {
            currentState[y][x] = true;
            currentState[y][x+1] = true;
            currentState[y][x+2] = true;
            currentState[y-1][x+2] = true;
            currentState[y-2][x+1] = true;
            paintScreen();
        }else if (selected == "Small Exploder") {
            currentState[y][x] = true;
            currentState[y][x+1] = true;
            currentState[y][x+2] = true;
            currentState[y+1][x] = true;
            currentState[y+1][x+2] = true;
            currentState[y-1][x+1] = true;
            currentState[y+2][x+1] = true;
            paintScreen();
        }else if (selected == "Exploder") {
            currentState[y][x] = true;
            currentState[y+1][x] = true;
            currentState[y+2][x] = true;
            currentState[y+3][x] = true;
            currentState[y+4][x] = true;
            currentState[y][x+4] = true;
            currentState[y+1][x+4] = true;
            currentState[y+2][x+4] = true;
            currentState[y+3][x+4] = true;
            currentState[y+4][x+4] = true;
            currentState[y][x+2] = true;
            currentState[y+4][x+2] = true;
            paintScreen();
        }else if (selected == "10 cell row") {
            currentState[y][x-5] = true;
            currentState[y][x-4] = true;
            currentState[y][x-3] = true;
            currentState[y][x-2] = true;
            currentState[y][x-1] = true;
            currentState[y][x] = true;
            currentState[y][x+1] = true;
            currentState[y][x+2] = true;
            currentState[y][x+3] = true;
            currentState[y][x+4] = true;
            paintScreen();
        }else if (selected == "Lightweight Spaceship") {
            currentState[y+1][x] = true;
            currentState[y][x+1] = true;
            currentState[y][x+2] = true;
            currentState[y][x+3] = true;
            currentState[y][x+4] = true;
            currentState[y+1][x+4] = true;
            currentState[y+2][x+4] = true;
            currentState[y+3][x+3] = true;
            currentState[y+3][x] = true;
            paintScreen();
        }else if (selected == "Tumbler") {
            currentState[y][x] = true;
            currentState[y][x+1] = true;
            currentState[y+1][x] = true;
            currentState[y+1][x+1] = true;
            currentState[y+2][x+1] = true;
            currentState[y+3][x+1] = true;
            currentState[y+4][x+1] = true;
            currentState[y+5][x] = true;
            currentState[y+5][x-1] = true;
            currentState[y+4][x-1] = true;
            currentState[y+3][x-1] = true;
            
            currentState[y][x+3] = true;
            currentState[y][x+4] = true;
            currentState[y+1][x+3] = true;
            currentState[y+1][x+4] = true;
            currentState[y+2][x+3] = true;
            currentState[y+3][x+3] = true;
            currentState[y+4][x+3] = true;
            currentState[y+5][x+4] = true;
            currentState[y+5][x+5] = true;
            currentState[y+4][x+5] = true;
            currentState[y+3][x+5   ] = true;
            paintScreen();
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GOL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GOL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GOL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GOL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GOL().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
    

}
